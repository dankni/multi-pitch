version: 2
jobs:
  build:
    docker:
      - image: circleci/node:lts-browsers-legacy
    working_directory: /tmp/multipitch
    steps:
      - checkout
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Restore local dependencies from cache
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      # Install project dependencies
      - run:
          name: Install local dependencies
          command: npm install
      # Generate all the data dependencies, that's it: js date, climbs folder and sitemap
      - run:
          name: Build all data, js date, climbs folder and sitemap
          command: npm run generate-all
      # Cache local dependencies if they don't exist
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      # Test the source code
      - run:
          name: Run Tests
          command: npm run test

       # Cache the build folders for the deploy job
      - save_cache:
          key: v1-website-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - website

  deploy:
    working_directory: /tmp/multipitch
    docker:
      - image: circleci/node:lts-browsers-legacy
    steps:
      - checkout
      # build folder that needs to be deployed
      - restore_cache:
          key: v1-website-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      # Install AWS cli
      - run:
          name: Install aws cli and python-pip
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install python-pip python-dev build-essential
            sudo pip install awscli
      # Deploy to the S3
      - run:
          name: Deploy to S3
          command: aws s3 sync website s3://www.multi-pitch.com --delete
      - run:
          name: Add a file to know which version was deployed
          command: |
            echo "release number: ${CIRCLE_TAG}" >> release.txt
      - run:
          name: Deploy that file
          command: aws s3 cp release.txt s3://www.multi-pitch.com
      - run:
          name: Invalidate CloudFront
          command: aws cloudfront create-invalidation --distribution-id E1WJUCQRX8PD1F --path "/*"
      - run:
          name: Set Image Cache MaxAge
          command: aws s3 cp s3://www.multi-pitch.com/ s3://www.multi-pitch.com/ --exclude "*" --include "*.jpg" --include "*.webp"  --include "*.png" --recursive --metadata-directive REPLACE --cache-control max-age=2629746
      - run:
          name: Print website url
          command: echo "www.multi-pitch.com"

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:  # required since `deploy` has tag filters AND requires `build`
            tags:
              only: /^v.*/

      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/